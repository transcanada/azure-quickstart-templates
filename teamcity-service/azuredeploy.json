{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"newStorageAccountName": {
			"type": "string",
			"metadata": {
				"description": "The name of the new storage account created to store the VMs disks"
			}
		},
		"storageAccountType": {
			"type": "string",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_RAGRS",
				"Standard_ZRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "The type of the Storage Account created"
			},
			"defaultValue": "Standard_LRS"
		},
		"location": {
			"type": "string",
			"allowedValues": [
				"West US",
				"East US",
				"West Europe",
				"East Asia",
				"Southeast Asia"
			],
			"metadata": {
				"description": "The region to deploy the resources into"
			}
		},
		"virtualNetworkName": {
			"type": "string",
			"metadata": {
				"description": "The name of the Virtual Network to Create"
			},
			"defaultValue": "tmctyVNET"
		},
		"virtualNetworkAddressRange": {
			"type": "string",
			"metadata": {
				"description": "The address range of the new VNET in CIDR format"
			},
			"defaultValue": "10.0.0.0/16"
		},
		"subnetName": {
			"type": "string",
			"metadata": {
				"description": "The name of the subnet created in the new VNET"
			},
			"defaultValue": "subnetRange"
		},
		"subnetRange": {
			"type": "string",
			"metadata": {
				"description": "The address range of the subnet created in the new VNET"
			},
			"defaultValue": "10.0.0.0/24"
		},		
		"adminUsername": {
			"type": "string",
			"defaultValue": "AzAdmin",
			"metadata": {
				"description": "The name of the Administrator of the new VM and Domain"
			}			
		},
		"adminPassword": {
			"type": "securestring",
			"defaultValue": "AzP@ssword1",
			"metadata": {
				"description": "The password for the Administrator account of the new VM and Domain"
			}
		},		
		"imagePublisher": {
			"type": "string",
			"defaultValue": "MicrosoftWindowsServer",
			"metadata": {
				"description": "Image Publisher"
			}
		},
		"imageOffer": {
			"type": "string",
			"defaultValue": "WindowsServer",
			"metadata": {
				"description": "Image Offer"
			}
		},
		"imageSKU": {
			"type": "string",
			"defaultValue": "2012-R2-Datacenter",
			"metadata": {
				"description": "Image SKU"
			}
		},						
		"AssetLocation": {
			"type": "string",
			"metadata": {
				"description": "The location of resources such as templates and DSC modules that the script is dependent"
			},
			"defaultValue": "https://raw.githubusercontent.com/transcanada/azure-quickstart-templates/master/teamcity-service"
		},
		"DatabaseServerName": {
			"type": "string",
			"metadata": {
				"description": "The name of the database server"
			},
			"defaultValue": "SQLDatabaseServer"
		},
		"DatabaseName": {
			"type": "string",
			"metadata": {
				"description": "The name of the database"
			}
		},
        "DatabaseCollation": {
            "type": "string",
            "defaultValue": "SQL_Latin1_General_Cp1_CS_AS",
            "metadata": {
                "description": "The database collation for governing the proper use of characters."
            }
        },
        "DatabaseEdition": {
            "type": "string",
            "defaultValue": "Standard",			
            "metadata": {
                "description": "The type of database to create."
            }
        },
        "DatabaseMaxSizeBytes": {
            "type": "string",
            "defaultValue": "1073741824",
            "metadata": {
                "description": "The maximum size, in bytes, for the database"
            }
        },
        "DatabaseRequestedServiceObjectiveId": {
            "type": "string",
            "defaultValue": "1B1EBD4D-D903-4BAA-97F9-4EA675F5E928",
            "metadata": {
                "description": "The GUID corresponding to the performance level for edition."
            }
        },
        "TeamCityServiceName": {
            "type": "string",            
            "metadata": {
                "description": "Name for the TeamCity Service"
            },
			"defaultValue": "TmCty"
        },
        "TeamCityServerVMSize": {
			"type": "string",
			"allowedValues": [
				"Standard_D1",
				"Standard_DS1",
				"Standard_D2",
				"Standard_DS2",
				"Standard_D3",
				"Standard_DS3",
				"Standard_D4",
				"Standard_DS4",
				"Standard_D11",
				"Standard_DS11",
				"Standard_D12",
				"Standard_DS12",
				"Standard_D13",
				"Standard_DS13",
				"Standard_D14",
				"Standard_DS14"
			],
			"metadata": {
				"description": "The size of the VM for TeamCity Server"
			},
			"defaultValue": "Standard_D2"
        },				
        "TeamCityAgentVMSize": {
			"type": "string",
			"allowedValues": [
				"Standard_A0",
				"Standard_A1",
				"Standard_A2"				
			],
			"metadata": {
				"description": "The size of the VM for TeamCity Agents"
			},
			"defaultValue": "Standard_A1"
        },						
		"TeamCityDNSNameForPublicIP": {
			"type": "string",
			"metadata": {
				"description": "Unique DNS Name for the Public IP used to access the TeamCity Server Virtual Machine."
			}
		},						
		"TeamCityAgentDNSNameForPublicIP": {
			"type": "string",
			"metadata": {
				"description": "Unique DNS Name for the Public IP used to access the TeamCity Agent Virtual Machine."
			}
		}					
	},
	"variables": {		
		"VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
		"subnetRangeRef": "[concat(variables('VnetID'),'/subnets/',parameters('subnetName'))]",				
		"vnetTemplateUri": "[concat(parameters('AssetLocation'),'/vnet.json')]",
		"TeamCityServerVMName": "[concat(parameters('TeamCityServiceName'),'SrvVM')]",				
		"TeamCityServerDisk": "tcsDataDisk",
		"TeamCityServerDiskSize": 300,
		"TeamCityPublicIPAddressName": "tcsPublicIP",
		"TeamCityIPAddressType": "Dynamic",
		"TeamCityNicName": "tcsNic",
		"TeamCityAgentVMName": "[concat(parameters('TeamCityServiceName'),'Agnt1VM')]",	
		"TeamCityAgentDisk": "tca1DataDisk",
		"TeamCityAgentDiskSize": 60,
		"TeamCityAgentNicName": "tca1Nic",
		"TeamCityAgentPublicIPAddressName": "tca1PublicIP"
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[parameters('newStorageAccountName')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},
		{
			"name": "VNet",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('vnetTemplateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {
						"value": "[parameters('location')]"
					},
					"virtualNetworkName": {
						"value": "[parameters('virtualNetworkName')]"
					},
					"virtualNetworkAddressRange": {
						"value": "[parameters('virtualNetworkAddressRange')]"
					},
					"subnetName": {
						"value": "[parameters('subnetName')]"
					},
					"subnetRange": {
						"value": "[parameters('subnetRange')]"
					}
				}
			}
		},
		{
	        "apiVersion": "2015-05-01-preview",
	        "type": "Microsoft.Network/publicIPAddresses",
	        "name": "[variables('TeamCityPublicIPAddressName')]",
	        "location": "[parameters('location')]",
	        "properties": {
	            "publicIPAllocationMethod": "[variables('TeamCityIPAddressType')]",
	            "dnsSettings": {
	                "domainNameLabel": "[parameters('TeamCityDNSNameForPublicIP')]"
	            }
	        }
	    },
		{
	        "apiVersion": "2015-05-01-preview",
	        "type": "Microsoft.Network/networkInterfaces",
	        "name": "[variables('TeamCityNicName')]",
	        "location": "[parameters('location')]",
	        "dependsOn": [
				"[resourceId('Microsoft.Network/publicIPAddresses',variables('TeamCityPublicIPAddressName'))]",				            			
				"Microsoft.Resources/deployments/VNet"
	        ],
	        "properties": {
	            "ipConfigurations": [
	                {
	                    "name": "ipconfig1",
	                    "properties": {
	                        "privateIPAllocationMethod": "Dynamic",
	                        "publicIPAddress": {
	                            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('TeamCityPublicIPAddressName'))]"
	                        },
	                        "subnet": {
	                            "id": "[variables('subnetRangeRef')]"
	                        }
	                    }
	                }
	            ]
	        }
	    },
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('TeamCityServerVMName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
				"[resourceId('Microsoft.Network/networkInterfaces',variables('TeamCityNicName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('TeamCityServerVMSize')]"
				},
				"osProfile": {
					"computername": "[variables('TeamCityServerVMName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('imagePublisher')]",
						"offer": "[parameters('imageOffer')]",
						"sku": "[parameters('imageSKU')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','tcsosdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/', variables('TeamCityServerDisk'),'-1.vhd')]"
							},
							"name": "[concat(variables('TeamCityServerVMName'),'-data-disk1')]",
							"caching": "None",
							"createOption": "empty",
							"diskSizeGB": "[variables('TeamCityServerDiskSize')]",
							"lun": 0
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('TeamCityNicName'))]"
						}
					]
				}
			}			
		},
		{
	        "apiVersion": "2015-05-01-preview",
	        "type": "Microsoft.Network/publicIPAddresses",
	        "name": "[variables('TeamCityAgentPublicIPAddressName')]",
	        "location": "[parameters('location')]",
	        "properties": {
	            "publicIPAllocationMethod": "[variables('TeamCityIPAddressType')]",
	            "dnsSettings": {
	                "domainNameLabel": "[parameters('TeamCityAgentDNSNameForPublicIP')]"
	            }
	        }
	    },		
		{
	        "apiVersion": "2015-05-01-preview",
	        "type": "Microsoft.Network/networkInterfaces",
	        "name": "[variables('TeamCityAgentNicName')]",
	        "location": "[parameters('location')]",
	        "dependsOn": [						            			
				"Microsoft.Resources/deployments/VNet"
	        ],
	        "properties": {
	            "ipConfigurations": [
	                {
	                    "name": "ipconfig1",
	                    "properties": {
	                        "privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
	                            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('TeamCityAgentPublicIPAddressName'))]"
	                        },	                        
	                        "subnet": {
	                            "id": "[variables('subnetRangeRef')]"
	                        }
	                    }
	                }
	            ]
	        }
	    },
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('TeamCityAgentVMName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
				"[resourceId('Microsoft.Network/networkInterfaces',variables('TeamCityAgentNicName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('TeamCityAgentVMSize')]"
				},
				"osProfile": {
					"computername": "[variables('TeamCityAgentVMName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('imagePublisher')]",
						"offer": "[parameters('imageOffer')]",
						"sku": "[parameters('imageSKU')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','tca1osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/', variables('TeamCityAgentDisk'),'-1.vhd')]"
							},
							"name": "[concat(variables('TeamCityAgentVMName'),'-data-disk1')]",
							"caching": "None",
							"createOption": "empty",
							"diskSizeGB": "[variables('TeamCityAgentDiskSize')]",
							"lun": 0
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('TeamCityAgentNicName'))]"
						}
					]
				}
			}			
		},										
		{
	      "name": "[parameters('DatabaseServerName')]",
	      "type": "Microsoft.Sql/servers",
	      "location": "[parameters('location')]",
	      "apiVersion": "2014-04-01-preview",
	      "dependsOn": [ ],	      
	      "tags": {
	        "displayName": "SQLServer12"
	      },
	      "properties": {
	        "administratorLogin": "[parameters('adminUserName')]",
	        "administratorLoginPassword": "[parameters('adminPassword')]",
	        "version": "12.0"
	      },
	      "resources": [
	        {
	          "name": "[parameters('DatabaseName')]",
	          "type": "databases",
	          "location": "[parameters('location')]",
	          "apiVersion": "2014-04-01-preview",
	          "dependsOn": [
	            "[concat('Microsoft.Sql/servers/', parameters('DatabaseServerName'))]"
	          ],
	          "properties": {
	            "edition": "[parameters('DatabaseEdition')]",
	            "collation": "[parameters('DatabaseCollation')]",
	            "maxSizeBytes": "[parameters('DatabaseMaxSizeBytes')]",
	            "requestedServiceObjectiveId": "[parameters('DatabaseRequestedServiceObjectiveId')]"
	          }
	        },
			{
	          "name": "AllowAllWindowsAzureIps",
	          "type": "firewallrules",
	          "location": "[parameters('location')]",
	          "apiVersion": "2014-04-01-preview",
	          "dependsOn": [
	            "[concat('Microsoft.Sql/servers/', parameters('DatabaseServerName'))]"
	          ],
	          "properties": {
	            "startIpAddress": "0.0.0.0", 
	            "endIpAddress": "0.0.0.0" 
	          }
	        }
	      ]
	    }
	]
}